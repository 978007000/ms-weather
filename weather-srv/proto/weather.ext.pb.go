// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weather.ext.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//请求参数
type DataReq struct {
	AppSecret            string   `protobuf:"bytes,111,opt,name=appSecret,proto3" json:"appSecret,omitempty"`
	CityCode             string   `protobuf:"bytes,112,opt,name=cityCode,proto3" json:"cityCode,omitempty"`
	City                 string   `protobuf:"bytes,113,opt,name=city,proto3" json:"city,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataReq) Reset()         { *m = DataReq{} }
func (m *DataReq) String() string { return proto.CompactTextString(m) }
func (*DataReq) ProtoMessage()    {}
func (*DataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cb1c2905324e013, []int{0}
}

func (m *DataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataReq.Unmarshal(m, b)
}
func (m *DataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataReq.Marshal(b, m, deterministic)
}
func (m *DataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataReq.Merge(m, src)
}
func (m *DataReq) XXX_Size() int {
	return xxx_messageInfo_DataReq.Size(m)
}
func (m *DataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DataReq.DiscardUnknown(m)
}

var xxx_messageInfo_DataReq proto.InternalMessageInfo

func (m *DataReq) GetAppSecret() string {
	if m != nil {
		return m.AppSecret
	}
	return ""
}

func (m *DataReq) GetCityCode() string {
	if m != nil {
		return m.CityCode
	}
	return ""
}

func (m *DataReq) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

//天气预报的数据
type ForecastData struct {
	CityCode             string         `protobuf:"bytes,1,opt,name=cityCode,proto3" json:"cityCode,omitempty"`
	City                 string         `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	UpdateTime           string         `protobuf:"bytes,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Data                 []*WeatherData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ForecastData) Reset()         { *m = ForecastData{} }
func (m *ForecastData) String() string { return proto.CompactTextString(m) }
func (*ForecastData) ProtoMessage()    {}
func (*ForecastData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cb1c2905324e013, []int{1}
}

func (m *ForecastData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForecastData.Unmarshal(m, b)
}
func (m *ForecastData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForecastData.Marshal(b, m, deterministic)
}
func (m *ForecastData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForecastData.Merge(m, src)
}
func (m *ForecastData) XXX_Size() int {
	return xxx_messageInfo_ForecastData.Size(m)
}
func (m *ForecastData) XXX_DiscardUnknown() {
	xxx_messageInfo_ForecastData.DiscardUnknown(m)
}

var xxx_messageInfo_ForecastData proto.InternalMessageInfo

func (m *ForecastData) GetCityCode() string {
	if m != nil {
		return m.CityCode
	}
	return ""
}

func (m *ForecastData) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *ForecastData) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *ForecastData) GetData() []*WeatherData {
	if m != nil {
		return m.Data
	}
	return nil
}

//当前天气预报的数据
type NowData struct {
	CityCode             string       `protobuf:"bytes,1,opt,name=cityCode,proto3" json:"cityCode,omitempty"`
	City                 string       `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	UpdateTime           string       `protobuf:"bytes,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Data                 *WeatherData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *NowData) Reset()         { *m = NowData{} }
func (m *NowData) String() string { return proto.CompactTextString(m) }
func (*NowData) ProtoMessage()    {}
func (*NowData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cb1c2905324e013, []int{2}
}

func (m *NowData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NowData.Unmarshal(m, b)
}
func (m *NowData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NowData.Marshal(b, m, deterministic)
}
func (m *NowData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NowData.Merge(m, src)
}
func (m *NowData) XXX_Size() int {
	return xxx_messageInfo_NowData.Size(m)
}
func (m *NowData) XXX_DiscardUnknown() {
	xxx_messageInfo_NowData.DiscardUnknown(m)
}

var xxx_messageInfo_NowData proto.InternalMessageInfo

func (m *NowData) GetCityCode() string {
	if m != nil {
		return m.CityCode
	}
	return ""
}

func (m *NowData) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *NowData) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *NowData) GetData() *WeatherData {
	if m != nil {
		return m.Data
	}
	return nil
}

//天气情况的数据
type WeatherData struct {
	Id                   string   `protobuf:"bytes,801,opt,name=id,proto3" json:"id,omitempty"`
	CityCode             string   `protobuf:"bytes,802,opt,name=cityCode,proto3" json:"cityCode,omitempty"`
	City                 string   `protobuf:"bytes,803,opt,name=city,proto3" json:"city,omitempty"`
	Date                 string   `protobuf:"bytes,804,opt,name=date,proto3" json:"date,omitempty"`
	UpdateTime           string   `protobuf:"bytes,805,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Tem                  string   `protobuf:"bytes,806,opt,name=tem,proto3" json:"tem,omitempty"`
	TemHigh              string   `protobuf:"bytes,807,opt,name=temHigh,proto3" json:"temHigh,omitempty"`
	TemLow               string   `protobuf:"bytes,808,opt,name=temLow,proto3" json:"temLow,omitempty"`
	CondCodeDay          string   `protobuf:"bytes,809,opt,name=condCodeDay,proto3" json:"condCodeDay,omitempty"`
	CondTxtDay           string   `protobuf:"bytes,811,opt,name=condTxtDay,proto3" json:"condTxtDay,omitempty"`
	CondCodeNight        string   `protobuf:"bytes,812,opt,name=condCodeNight,proto3" json:"condCodeNight,omitempty"`
	CondTxtNight         string   `protobuf:"bytes,813,opt,name=condTxtNight,proto3" json:"condTxtNight,omitempty"`
	Pm25                 string   `protobuf:"bytes,814,opt,name=pm25,proto3" json:"pm25,omitempty"`
	Pm10                 string   `protobuf:"bytes,815,opt,name=pm10,proto3" json:"pm10,omitempty"`
	Aqi                  string   `protobuf:"bytes,816,opt,name=aqi,proto3" json:"aqi,omitempty"`
	Quality              string   `protobuf:"bytes,817,opt,name=quality,proto3" json:"quality,omitempty"`
	WindDeg              string   `protobuf:"bytes,818,opt,name=windDeg,proto3" json:"windDeg,omitempty"`
	WindDir              string   `protobuf:"bytes,819,opt,name=windDir,proto3" json:"windDir,omitempty"`
	WindSc               string   `protobuf:"bytes,820,opt,name=windSc,proto3" json:"windSc,omitempty"`
	WindSpd              string   `protobuf:"bytes,821,opt,name=windSpd,proto3" json:"windSpd,omitempty"`
	Pres                 string   `protobuf:"bytes,822,opt,name=pres,proto3" json:"pres,omitempty"`
	Vis                  string   `protobuf:"bytes,823,opt,name=vis,proto3" json:"vis,omitempty"`
	Type                 string   `protobuf:"bytes,824,opt,name=type,proto3" json:"type,omitempty"`
	Cold                 string   `protobuf:"bytes,825,opt,name=cold,proto3" json:"cold,omitempty"`
	Notice               string   `protobuf:"bytes,826,opt,name=notice,proto3" json:"notice,omitempty"`
	Source               string   `protobuf:"bytes,827,opt,name=source,proto3" json:"source,omitempty"`
	CreateTime           string   `protobuf:"bytes,828,opt,name=createTime,proto3" json:"createTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeatherData) Reset()         { *m = WeatherData{} }
func (m *WeatherData) String() string { return proto.CompactTextString(m) }
func (*WeatherData) ProtoMessage()    {}
func (*WeatherData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cb1c2905324e013, []int{3}
}

func (m *WeatherData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeatherData.Unmarshal(m, b)
}
func (m *WeatherData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeatherData.Marshal(b, m, deterministic)
}
func (m *WeatherData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeatherData.Merge(m, src)
}
func (m *WeatherData) XXX_Size() int {
	return xxx_messageInfo_WeatherData.Size(m)
}
func (m *WeatherData) XXX_DiscardUnknown() {
	xxx_messageInfo_WeatherData.DiscardUnknown(m)
}

var xxx_messageInfo_WeatherData proto.InternalMessageInfo

func (m *WeatherData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WeatherData) GetCityCode() string {
	if m != nil {
		return m.CityCode
	}
	return ""
}

func (m *WeatherData) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *WeatherData) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *WeatherData) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *WeatherData) GetTem() string {
	if m != nil {
		return m.Tem
	}
	return ""
}

func (m *WeatherData) GetTemHigh() string {
	if m != nil {
		return m.TemHigh
	}
	return ""
}

func (m *WeatherData) GetTemLow() string {
	if m != nil {
		return m.TemLow
	}
	return ""
}

func (m *WeatherData) GetCondCodeDay() string {
	if m != nil {
		return m.CondCodeDay
	}
	return ""
}

func (m *WeatherData) GetCondTxtDay() string {
	if m != nil {
		return m.CondTxtDay
	}
	return ""
}

func (m *WeatherData) GetCondCodeNight() string {
	if m != nil {
		return m.CondCodeNight
	}
	return ""
}

func (m *WeatherData) GetCondTxtNight() string {
	if m != nil {
		return m.CondTxtNight
	}
	return ""
}

func (m *WeatherData) GetPm25() string {
	if m != nil {
		return m.Pm25
	}
	return ""
}

func (m *WeatherData) GetPm10() string {
	if m != nil {
		return m.Pm10
	}
	return ""
}

func (m *WeatherData) GetAqi() string {
	if m != nil {
		return m.Aqi
	}
	return ""
}

func (m *WeatherData) GetQuality() string {
	if m != nil {
		return m.Quality
	}
	return ""
}

func (m *WeatherData) GetWindDeg() string {
	if m != nil {
		return m.WindDeg
	}
	return ""
}

func (m *WeatherData) GetWindDir() string {
	if m != nil {
		return m.WindDir
	}
	return ""
}

func (m *WeatherData) GetWindSc() string {
	if m != nil {
		return m.WindSc
	}
	return ""
}

func (m *WeatherData) GetWindSpd() string {
	if m != nil {
		return m.WindSpd
	}
	return ""
}

func (m *WeatherData) GetPres() string {
	if m != nil {
		return m.Pres
	}
	return ""
}

func (m *WeatherData) GetVis() string {
	if m != nil {
		return m.Vis
	}
	return ""
}

func (m *WeatherData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WeatherData) GetCold() string {
	if m != nil {
		return m.Cold
	}
	return ""
}

func (m *WeatherData) GetNotice() string {
	if m != nil {
		return m.Notice
	}
	return ""
}

func (m *WeatherData) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *WeatherData) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func init() {
	proto.RegisterType((*DataReq)(nil), "pb.DataReq")
	proto.RegisterType((*ForecastData)(nil), "pb.ForecastData")
	proto.RegisterType((*NowData)(nil), "pb.NowData")
	proto.RegisterType((*WeatherData)(nil), "pb.WeatherData")
}

func init() { proto.RegisterFile("weather.ext.proto", fileDescriptor_1cb1c2905324e013) }

var fileDescriptor_1cb1c2905324e013 = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4b, 0x6f, 0x13, 0x3d,
	0x14, 0x6d, 0x92, 0x7e, 0x93, 0xd6, 0xe9, 0x47, 0xa9, 0xbb, 0xe0, 0x52, 0x10, 0xb4, 0xa9, 0x90,
	0x2a, 0x21, 0x45, 0x6d, 0x10, 0xbf, 0x80, 0x08, 0xb1, 0x40, 0x59, 0x34, 0x95, 0xba, 0xc5, 0x99,
	0xb9, 0x4a, 0x2c, 0x25, 0xb1, 0xe3, 0x71, 0x92, 0x66, 0xc3, 0x86, 0x5f, 0xc2, 0x1b, 0xc4, 0xfb,
	0xfd, 0x5c, 0xf2, 0xc3, 0xd0, 0xb5, 0x3d, 0xc9, 0x04, 0xd4, 0x25, 0x3b, 0x9f, 0x73, 0xae, 0xaf,
	0xcf, 0x1c, 0xdf, 0x31, 0xdb, 0x98, 0xa0, 0xb0, 0x5d, 0x34, 0x35, 0x3c, 0xb1, 0x35, 0x6d, 0x94,
	0x55, 0xbc, 0xa8, 0xdb, 0xd5, 0x63, 0x56, 0x6e, 0x08, 0x2b, 0x0e, 0x71, 0xc8, 0x2f, 0xb2, 0x55,
	0xa1, 0x75, 0x0b, 0x63, 0x83, 0x16, 0xd4, 0x76, 0x61, 0x6f, 0xf5, 0x70, 0x4e, 0xf0, 0x2d, 0xb6,
	0x12, 0x4b, 0x3b, 0xbd, 0xa1, 0x12, 0x04, 0xed, 0xc4, 0x19, 0xe6, 0x9c, 0x2d, 0xd3, 0x1a, 0x86,
	0x8e, 0x77, 0xeb, 0xea, 0xbd, 0x02, 0x5b, 0xbb, 0xa9, 0x0c, 0xc6, 0x22, 0xb5, 0x74, 0xc2, 0x42,
	0x83, 0xc2, 0x29, 0x0d, 0x8a, 0xf3, 0x06, 0xfc, 0x12, 0x63, 0x23, 0x9d, 0x08, 0x8b, 0x47, 0xb2,
	0x8f, 0x50, 0x72, 0x4a, 0x8e, 0xe1, 0xbb, 0x6c, 0x39, 0x11, 0x56, 0xc0, 0xf2, 0x76, 0x69, 0xaf,
	0x52, 0x5f, 0xaf, 0xe9, 0x76, 0xed, 0xd8, 0x7f, 0xa2, 0xfb, 0x20, 0x27, 0x56, 0xef, 0xb2, 0x72,
	0x53, 0x4d, 0xfe, 0xf1, 0xf9, 0x85, 0xd3, 0xcf, 0xff, 0xf5, 0x1f, 0xab, 0xe4, 0x58, 0xbe, 0xce,
	0x8a, 0x32, 0x81, 0xfb, 0x91, 0xeb, 0x56, 0x94, 0x09, 0xbf, 0x90, 0x73, 0xf5, 0x20, 0xfa, 0xc3,
	0xd6, 0x66, 0xb0, 0xf5, 0x30, 0xca, 0xf9, 0xda, 0x74, 0xe7, 0x22, 0x3c, 0x0a, 0x24, 0x01, 0x7e,
	0x79, 0xc1, 0xec, 0xe3, 0xe8, 0x2f, 0xb7, 0x1b, 0xac, 0x64, 0xb1, 0x0f, 0x4f, 0xbc, 0x42, 0x6b,
	0x7e, 0x9e, 0x95, 0x2d, 0xf6, 0x6f, 0xc9, 0x4e, 0x17, 0x9e, 0x7a, 0x3a, 0xc3, 0xfc, 0x1c, 0x8b,
	0x2c, 0xf6, 0x6f, 0xab, 0x09, 0x3c, 0xf3, 0x4a, 0x80, 0x7c, 0x87, 0x55, 0x62, 0x35, 0x48, 0xc8,
	0x5d, 0x43, 0x4c, 0xe1, 0xb9, 0x57, 0xf3, 0x1c, 0x59, 0x21, 0x78, 0x74, 0x62, 0xa9, 0xe2, 0x45,
	0xb0, 0x32, 0xa7, 0xf8, 0x15, 0xf6, 0x7f, 0x56, 0xdf, 0x94, 0x9d, 0xae, 0x85, 0x97, 0xbe, 0x66,
	0x91, 0xe5, 0xbb, 0x6c, 0x2d, 0x6c, 0xf2, 0x55, 0xaf, 0x7c, 0xd5, 0x02, 0x49, 0x61, 0xe8, 0x7e,
	0xfd, 0x3a, 0xbc, 0x0e, 0x61, 0x10, 0xf0, 0xe4, 0xc1, 0x3e, 0xbc, 0x99, 0x91, 0x07, 0xfb, 0x14,
	0x80, 0x18, 0x4a, 0x78, 0x1b, 0x02, 0x10, 0x43, 0x49, 0x01, 0x0c, 0x47, 0xa2, 0x47, 0x09, 0xbf,
	0x0b, 0x01, 0x04, 0x4c, 0xd2, 0x44, 0x0e, 0x92, 0x06, 0x76, 0xe0, 0x7d, 0x90, 0x02, 0x9e, 0x49,
	0xd2, 0xc0, 0x87, 0xbc, 0x24, 0x0d, 0xc5, 0x46, 0xcb, 0x56, 0x0c, 0x1f, 0x43, 0x6c, 0x1e, 0x66,
	0x7b, 0x5a, 0x3a, 0x81, 0x4f, 0xb9, 0x3d, 0x2d, 0x9d, 0x38, 0xb3, 0x06, 0x53, 0xf8, 0x9c, 0x99,
	0x35, 0x98, 0x92, 0xd9, 0xb1, 0x4c, 0xe1, 0x4b, 0x30, 0x3b, 0x96, 0x29, 0xd5, 0xd9, 0xa9, 0x46,
	0xf8, 0x1a, 0xea, 0x08, 0xb8, 0x01, 0x51, 0xbd, 0x04, 0xbe, 0x65, 0x03, 0xa2, 0x7a, 0x09, 0xb9,
	0x18, 0x28, 0x2b, 0x63, 0x84, 0xef, 0xc1, 0x85, 0x87, 0x24, 0xa4, 0x6a, 0x64, 0x62, 0x84, 0x1f,
	0x41, 0xf0, 0xd0, 0x5d, 0x99, 0xc1, 0x6c, 0x7a, 0x7e, 0x66, 0x57, 0x36, 0xa3, 0xea, 0x77, 0xd8,
	0x99, 0x30, 0xc5, 0x2d, 0x34, 0x63, 0xea, 0xb5, 0xc3, 0x4a, 0x4d, 0x35, 0xe1, 0x15, 0x1a, 0xfb,
	0xf0, 0x80, 0x6c, 0x39, 0x10, 0x7e, 0xb7, 0xea, 0x12, 0xbf, 0xca, 0x56, 0xb2, 0x07, 0x60, 0xb1,
	0xee, 0x2c, 0x81, 0xfc, 0xdb, 0x50, 0x5d, 0x6a, 0x47, 0xee, 0x49, 0xba, 0xf6, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x3b, 0x17, 0xd9, 0x39, 0xa7, 0x04, 0x00, 0x00,
}
